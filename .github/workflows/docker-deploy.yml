name: Build and Deploy via Docker Hub

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  build-and-deploy:
    if: |
      github.event_name == 'push' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Telegram notification (start)
        run: |
          BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          USER_IDS="${{ secrets.TELEGRAM_CHAT_ID }}"
          MESSAGE="Deploy starting:
          Repo: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Author: ${{ github.actor }}"

          for USER_ID in $USER_IDS; do
            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="$USER_ID" \
              -d text="$MESSAGE"
          done

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/shock-fastapi-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/shock-fastapi-backend:latest
          cache-to: type=inline

      - name: Copy docker-compose.yml and nginx.conf to server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 2084
          source: /config/docker-compose.yml,/config/nginx.conf,/config/.env
          target: /root/fastapi/

      - name: Deploy on server via SSH
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 2084
          script: |
            set -e
            cd /root/fastapi

            docker container rm -f fastapi-container || true
            docker container rm -f nginx-container || true

            docker pull asdfrewqha/shock-fastapi-backend:latest

            docker compose up -d --build --remove-orphans

      - name: Telegram notification (success)
        if: success()
        run: |
          BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          USER_IDS="${{ secrets.TELEGRAM_CHAT_ID }}"
          MESSAGE="Deployment finished successfully:
          Repo: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Author: ${{ github.actor }}"

          for USER_ID in $USER_IDS; do
            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="$USER_ID" \
              -d text="$MESSAGE"
          done

      - name: Telegram notification (fail)
        if: failure()
        run: |
          BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          USER_IDS="${{ secrets.TELEGRAM_CHAT_ID }}"
          MESSAGE="Deployment failure:
          Repo: ${{ github.repository }}
          Branch: ${{ github.ref_name }}
          Author: ${{ github.actor }}
          Check workflow logs."

                    for USER_ID in $USER_IDS; do
                      curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
                        -d chat_id="$USER_ID" \
                        -d text="$MESSAGE"
                    done
